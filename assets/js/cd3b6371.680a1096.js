"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[432],{8759:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=n(4848),o=n(8453);const a={sidebar_position:5},s="Data Store",i={id:"concepts/datastore",title:"Data Store",description:"Workflows need to be stored to a database. Whether you're using a key-value store or RDBMS, you need to implement the IDataStore interface and pass it to the polaris.InitRegistry method.",source:"@site/docs/concepts/datastore.md",sourceDirName:"concepts",slug:"/concepts/datastore",permalink:"/polaris/concepts/datastore",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Data",permalink:"/polaris/concepts/data"},next:{title:"Usage",permalink:"/polaris/usage"}},c={},d=[{value:"In-memory data store",id:"in-memory-data-store",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"data-store",children:"Data Store"}),"\n",(0,r.jsxs)(t.p,{children:["Workflows need to be stored to a database. Whether you're using a key-value store or RDBMS, you need to implement the ",(0,r.jsx)(t.code,{children:"IDataStore"})," interface and pass it to the ",(0,r.jsx)(t.code,{children:"polaris.InitRegistry"})," method."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"type IDataStore interface {\n  Write(key string, value interface{})\n  Read(key string) (interface{}, bool)\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"Once the interface is implemented, data stores must be set with polaris."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"polaris.InitRegistry(dataStore)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"in-memory-data-store",children:"In-memory data store"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"DO NOT DO THIS IN PRODUCTION!"})}),"\n",(0,r.jsx)(t.p,{children:"While getting set up with polaris, you can start with a simple in-memory data store"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-go",children:"type mockStorage struct {\n  store map[string]interface{}\n}\n\nfunc (ms *mockStorage) Read(key string) (interface{}, bool) {\n  val, ok := ms.store[key]\n  return val, ok\n}\n\nfunc (ms *mockStorage) Write(key string, val interface{}) {\n  ms.store[key] = val\n}\n\nmockStorage := &mockStorage{\n  store: make(map[string]interface{}),\n}\n\npolaris.InitRegistry(dataStore)\n"})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var r=n(6540);const o={},a=r.createContext(o);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);